{"version":3,"sources":["webpack:///./node_modules/@jeetiss/react-any-integrate/node_modules/@jeetiss/react-use-script/index.js","webpack:///./node_modules/@jeetiss/react-any-integrate/index.js","webpack:///./src/pages/index.js"],"names":["useLatestRef","value","ref","Object","react","current","merge","state","newState","runRef","args","react_any_integrate_merge","prev","next","Integration","src","children","setState","loading","error","url","onLoad","onError","onComplete","loaded","savedLoad","savedError","savedComplete","script","document","createElement","async","loadedFine","loadedWithError","addEventListener","body","appendChild","removeEventListener","parentNode","removeChild","useScript","map","child","index","key","Loading","Initial","HelloWorld","react_default","a","id","IndexPage","pages_HelloWorld"],"mappings":"qHAEA,MAAAA,EAAAC,IACA,MAAAC,EAAcC,OAAAC,EAAA,OAAAD,CAAMF,GAMpB,OAJEE,OAAAC,EAAA,UAAAD,CAAS,KACXD,EAAAG,QAAAJ,GACG,CAAAA,IAEHC,GAIAI,EAAA,CAAAC,EAAAC,KAAA,IAAqCD,KAAAC,IACrCC,EAAA,CAAAP,EAAAQ,IAAAR,EAAAG,SAAAH,EAAAG,WAAAK,GCXMC,EAAK,CAAAC,EAAAC,KAAA,IAAqBD,KAAAC,IAEhCC,EAAA,EAAsBC,MAAAC,eACtB,MAAAT,EAAAU,GAA4Bd,OAAAC,EAAA,WAAAD,CAAWQ,EAAK,CAAGO,SAAA,EAAAC,MAAA,OAO/C,MDGO,EAAAC,GAAyBC,SAAAC,UAAAC,cAA4B,MAC5D,OAAAC,OAAUA,EAAAL,SAAcF,GAAcd,OAAAC,EAAA,WAAAD,CAAUG,EAAA,CAChDkB,QAAA,EACAL,MAAA,OAGAM,EAAAzB,EAAAqB,GACAK,EAAA1B,EAAAsB,GACAK,EAAA3B,EAAAuB,GAEEpB,OAAAC,EAAA,UAAAD,CAAS,KACX,MAAAyB,EAAAC,SAAAC,cAAA,UAEAF,EAAAb,IAAAK,EACAQ,EAAAG,MAAA,EAEA,MAAAC,EAAA,KACAf,EAAA,CAAgBO,QAAA,IAChBf,EAAAgB,GACAhB,EAAAkB,IAGAM,EAAAd,IACAF,EAAA,CAAgBE,UAChBV,EAAAiB,EAAA,CAAAP,IACAV,EAAAkB,IAOA,OAJAC,EAAAM,iBAAA,OAAAF,GACAJ,EAAAM,iBAAA,QAAAD,GACAJ,SAAAM,KAAAC,YAAAR,GAEA,KACAA,EAAAS,oBAAA,OAAAL,GACAJ,EAAAS,oBAAA,QAAAJ,GACAL,EAAAU,WAAAC,YAAAX,KAEG,CAAAD,EAAAD,EAAAD,EAAAL,KC7CDoB,CAASzB,EAAA,CACXM,OAAA,IAAAJ,EAAA,CAA4BC,SAAA,IAC5BI,QAAAH,GAAAF,EAAA,CAAgCE,YAGvBf,EAAA,SAAQqC,IAAAzB,EAAA,CAAA0B,EAAAC,IACbxC,OAAAC,EAAA,aAAAD,CAAYuC,EAAA,CAASnC,QAAAqC,IAAAD,MAIzBE,EAAA,EAAkBtC,QAAAS,cAAkBT,EAAAW,QAAAF,EAAA,KAGpC8B,EAAA,EAAkBvC,QAAAS,cAClBT,EAAAY,MAAA,KAAAH,ECnBA,IAAM+B,EAAa,kBACjBC,EAAAC,EAAAnB,cAAChB,EAAD,CAAaC,IAAI,4BACfiC,EAAAC,EAAAnB,cAACe,EAAD,mBAEAG,EAAAC,EAAAnB,cAACgB,EAAD,KAASE,EAAAC,EAAAnB,cAAA,OAAKoB,GAAG,aAcNC,UAVG,kBAChBH,EAAAC,EAAAnB,cAAA,YACEkB,EAAAC,EAAAnB,cAAA,0CAEAkB,EAAAC,EAAAnB,cAAA,yBAEAkB,EAAAC,EAAAnB,cAACsB,EAAD","file":"component---src-pages-index-js-79a31e2a2183c3db7b89.js","sourcesContent":["import {useRef, useEffect, useReducer} from 'react'\n\nconst useLatestRef = value => {\n  const ref = useRef(value)\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref\n}\n\n// eslint-disable-next-line object-property-newline\nconst merge = (state, newState) => ({...state, ...newState})\nconst runRef = (ref, args) => ref.current && ref.current(...args)\n\nexport const useScript = (url, {onLoad, onError, onComplete} = {}) => {\n  const [{loaded, error}, setState] = useReducer(merge, {\n    loaded: false,\n    error: null,\n  })\n\n  const savedLoad = useLatestRef(onLoad)\n  const savedError = useLatestRef(onError)\n  const savedComplete = useLatestRef(onComplete)\n\n  useEffect(() => {\n    const script = document.createElement('script')\n\n    script.src = url\n    script.async = 1\n\n    const loadedFine = () => {\n      setState({loaded: true})\n      runRef(savedLoad)\n      runRef(savedComplete)\n    }\n\n    const loadedWithError = error => {\n      setState({error})\n      runRef(savedError, [error])\n      runRef(savedComplete)\n    }\n\n    script.addEventListener('load', loadedFine)\n    script.addEventListener('error', loadedWithError)\n    document.body.appendChild(script)\n\n    return () => {\n      script.removeEventListener('load', loadedFine)\n      script.removeEventListener('error', loadedWithError)\n      script.parentNode.removeChild(script)\n    }\n  }, [savedComplete, savedError, savedLoad, url])\n\n  return [loaded, error]\n}\n","import { useReducer, Children, cloneElement } from \"react\";\nimport { useScript } from \"@jeetiss/react-use-script\";\n\nconst merge = (prev, next) => ({ ...prev, ...next });\n\nconst Integration = ({ src, children }) => {\n  const [state, setState] = useReducer(merge, { loading: true, error: null });\n\n  useScript(src, {\n    onLoad: () => setState({ loading: false }),\n    onError: error => setState({ error })\n  });\n\n  return Children.map(children, (child, index) =>\n    cloneElement(child, { state, key: index })\n  );\n};\n\nconst Loading = ({ state, children }) => (state.loading ? children : null);\nconst Error = ({ state, children }) => (state.error ? children : null);\n\nconst Initial = ({ state, children }) =>\n  !state.error ? children : null\n\nexport {\n  Initial,\n  Integration,\n  Error,\n  Loading\n}\n","import React from \"react\"\nimport { Integration, Initial, Error, Loading } from '@jeetiss/react-any-integrate'\n\nconst HelloWorld = () => (\n  <Integration src='./public/hello-script.js'>\n    <Loading>Loading...</Loading>\n\n    <Initial><div id='hello'></div></Initial>\n  </Integration>\n)\n\nconst IndexPage = () => (\n  <main>\n    <h1>React-any-integrate examples</h1>\n\n    <h2>Hello world</h2>\n\n    <HelloWorld />\n  </main>\n)\n\nexport default IndexPage\n"],"sourceRoot":""}